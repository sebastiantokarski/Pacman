body {
    display: flex;
    align-items: center;
    justify-content: center;
}

aside {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: $asideWidth;
    height: 100vh;
    background-color: $asideColor;
    .points-aside {
        font-size: 2em;
        color: white;
        @keyframes show-bigger-points {
            0% {font-size: 4em;}
            100% {font-size: 2em;}
        }
    }
    i {
        border-radius: 20%;
        background-color: rgba(255, 255, 255, 0.15);
        &:hover {
            cursor: pointer;
            background-color: rgba(255, 255, 255, 0.3);
        }
        &:first-child {
            background-color: rgba(0, 0, 0, 0.15);
            &:hover {
                background-color: rgba(0, 0, 0, 0.3);
            }
        }
    }
}

.overlay {
    position: absolute;
    display: flex;
    justify-content: space-between;
    align-content: space-between;
    flex-direction: column;
    flex-wrap: wrap;
    top: calc(#{$tileSize} * 5 + 0.3%);
    left: - #{$tableBorderSize};
    width: calc(#{$tileSize} * 17 + (#{$tableBorderSize} * 2 + 0.7%));
    height: calc(#{$tileSize} * 5 + 0.35%);
    margin: 0 auto;
    z-index: 1;
    div {
        width: calc(#{$tileSize} * 3 + 1.8%);
        height: calc(#{$tileSize} * 2 + 1.1%);
        background-color: $lightBodyColor;
        border: 13px double black;
    }
    div:nth-of-type(1) {
        border-left: 0;
    }
    div:nth-of-type(2) {
        border-left: 0;
    }
    div:nth-of-type(3) {;
        border-right: 0;
    }
    div:nth-of-type(4) {
        border-right: 0;
    }
    // Base
    div:nth-of-type(5) {
        position: absolute;
        top: calc(#{$tileSize} * 2 + 0.4%);
        left: calc(#{$tileSize} * 6 + 1.7%);
        width: calc(#{$tileSize} * 5 + 0.3%);
        height: calc(#{$tileSize} * 2 + 0.9%);
        background-color: rgba(0, 47, 168, 0.8);// rgba(0, 0, 0, 0.7);
        border: 7px solid black;
        // Door
        &::after {
            content: ' ';
            display: block;
            position: absolute;
            width: $tileSize;
            height: 7px;
            top: -7px;
            left: calc(#{$tileSize} * 2 - 3%);
            background-color: $lightTableColor;
        }
    }
     div:nth-of-type(6) {
        position: absolute;
        top: calc(#{$tileSize} * 2 + 1.1%);
        width: calc(#{$tileSize} - 3.9%);
        height: calc(#{$tileSize} * 1 - 1%);
        border: 0;
        background-color: $lightTableColor;
    }
     div:nth-of-type(7) {
        position: absolute;
        top: calc(#{$tileSize} * 2 + 1.1%);
        right: 0;
        width: calc(#{$tileSize} - 3.9%);
        border: 0;
        height: calc(#{$tileSize} * 1 - 1%);
        background-color: $lightTableColor;
    }
}

.container {
    height: 100%;
    position: relative;
    margin: 0 auto;
    border: $tableBorderSize double $tableBorderColor;
}

table {
    position: relative;
    background-color: $tableColor;
    border-collapse: collapse;
}

td {
    width: $tileSize;
    height: $tileSize;
}

.food {
    &::after {
        content: ' ';
        display: block;
        margin: 0 auto;
        width: $foodSize;
        height: $foodSize;
        background-color: $foodColor;
    }
}

.wall {
    background-color: $wallColor;
    border: 2px solid $wallBorderColor;
    background: radial-gradient(circle at calc( #{$tileSize} / 2 ) calc( #{$tileSize} / 2 ), $wallColor, #000);
}

.base {
    background: white;
    border: 0;

}

.bonus {
    &::after {
        content: ' ';
        display: block;
        margin: 0 auto;
        width: $bonusSize;
        height: $bonusSize;
        border-radius: 50%;
        background: radial-gradient(circle at calc( #{$bonusSize} / 2 ) calc( #{$bonusSize} / 2 ), red, #000);
        animation: bonus-rotate 8s infinite linear;
    }
}

.intersection {
    //background-color: limegreen;
}

.game-over {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    width: 100vw;
    background-color: rgba(0, 0, 0, 1);
    z-index: 2;
    &::before {
        font-size: 12em;
        content: 'GAME OVER';
        display: block;
        color: red;
    }
    animation: gameOverScreen 4s linear 1;
}

.game-over {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    width: 100vw;
    background-color: rgba(0, 0, 0, 1);
    z-index: 2;
    &::before {
        font-size: 12em;
        content: 'GAME OVER';
        display: block;
        color: red;
    }
    animation: gameOverScreen 4s linear 1;
}

.you-win {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    width: 100vw;
    background-color: rgba(0, 0, 0, 1);
    z-index: 2;
    &::before {
        font-size: 12em;
        content: 'YOU WIN';
        display: block;
        color: deepskyblue;
    }
    animation: gameOverScreen 4s linear 1;
}

.again-button {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 20vw;
    height: 8vh;
    top: 5vh;
    left: 40vw;
    border: 0.5vw solid red;
    color: red;
    background-color: black;
    border-radius: 5vh;
    text-decoration: none;
    z-index: 2;
    &::after {
        content: 'Play Again';
        font-size: 2em;
    }
}

.win {
    color: deepskyblue;
    border: 0.5vw solid deepskyblue;
}


.hide {
    display: none;
}

.dark-theme {
    background-color: $darkBodyColor;
    .overlay {
        div {
            background-color: $darkBodyColor;
        }
        div:nth-of-type(5) {
            background-color: rgba(0, 0, 0, 0.7);
            &::after {
                background-color: $darkTableColor;
            }
        }
        div:nth-of-type(6), div:nth-of-type(7) {
            background-color: $darkTableColor;
        }
    }
    aside {
        background-color: $asideColor;
    }
    table {
        background-color: $darkTableColor;

        .food {
            &::after {
                background-color: $darkFoodColor;
            }
        }
        .wall {
            background: radial-gradient(circle at calc( #{$tileSize} / 2 ) calc( #{$tileSize} / 2 ), #0000b3, #000);
            //border: 1px dotted red;
        }
        .base {
            background: $darkTableColor;
        }
        .bonus {
            &::after {
                background-color: $bonusColor;
            }
        }
    }
}


